<launch>
    <arg name="rectification" default="true"/>
    <arg name="sonar_viewer" default="true"/>
    <arg name="rviz" default="true"/>
    <arg name="plot" default="true"/>
    <param name="/use_sim_time" value="true"/>

    <node if="$(arg rviz)" type="rviz" name="rviz" pkg="rviz" args="-d $(find sonar_camera_reconstruction)/rviz/merge.rviz" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="world2baselink" args="0 0 0 0 0 0 map odom" />

        <!-- Topics -->
    <arg name="sonar_topic" default="/sonar_oculus_node/M750d/ping"/>
    <arg name="img_topic" default="/camera/image_raw/compressed"/>
    <arg name="odom_topic" default="/bruce/slam/localization/odom"/>
    <arg name="segmented_img_topic" default="/sonar_camera_reconstruction/segmented_img/compressed"/>
    <arg name="merge_cloud_topic" default="/sonar_camera_reconstruction/cloud"/>
    <arg name="feature_image_topic" default="/sonar_camera_reconstruction/feature_img/compressed"/>

    <node pkg="sonar_camera_reconstruction" name="merge_node" type="merge_node.py" output="screen">
        <param name="publish_rate" type="int" value="5"/>

        <param name="sonar_sub" type="str" value="$(arg sonar_topic)"/>
        <param name="odom_sub" type="str" value="$(arg odom_topic)"/>
        <param name="image_sub" type="str" value="$(arg img_topic)"/>
        <param name="segmented_image_pub" type="str" value="$(arg segmented_img_topic)"/>
        <param name="merge_cloud_pub" type="str" value="$(arg merge_cloud_topic)"/>
        <param name="feature_image_pub" type="str" value="$(arg feature_image_topic)"/>

        <rosparam file="$(find sonar_camera_reconstruction)/config/monocular_camera_params.yaml"/>
        <rosparam file="$(find sonar_camera_reconstruction)/config/sonar_params.yaml"/>
        <rosparam file="$(find sonar_camera_reconstruction)/config/merge_params.yaml"/>
    </node>

</launch>